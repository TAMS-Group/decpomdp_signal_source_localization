<launch>
	<rosparam file="$(find dec_pomdp_server)/config/simulation.yaml" />
	<!-- <arg name="server" default="tams95"/> -->
	<node name="heartbeat" pkg="dec_pomdp_client" type="heartbeat_publisher.py">
		<param name="robot_name" value="TestTurtleBot"/> 
	</node>
	<node name="measurement" pkg="dec_pomdp_client" type="measurement_publisher.py"></node>
	
	<!--This part starts up the policy execution node -->
	<node name="policy_execution" pkg="dec_pomdp_client" type="policy_listener.py"></node>

	<!--Only relevant for simulation-->
	<arg name="map" value="$(find tams_turtlebot_navigation)/maps/tams_localization.yaml" />
    <arg name="map_navigation" value="$(find tams_turtlebot_navigation)/maps/tams_navigation.yaml" />
	<node name="map_localization" pkg="map_server" type="map_server" args="$(arg map)" />
 	<node name="map_navigation" pkg="map_server" type="map_server" args="$(arg map_navigation)" >
    	<remap from="map" to="map_navigation"/>
  	</node>

	<param name="robot_description" command="$(find xacro)/xacro '$(find turtlebot_description)/robots/kobuki_hexagons_kinect.urdf.xacro'"/>
	<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher"/>
	<node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
		<param name="publish_frequency" type="double" value="10.0"/>
	</node>

	<node name="move_base_simulation" pkg="move_base_stub" type="move_base_stub.py"/>
	
<!-- Only relevant for production
	<node name="$(anon master_discovery)" pkg="master_discovery_fkie" type="master_discovery" output="log">
			<rosparam param="robot_hosts" subst_value="True">[$(env TURTLEBOT_NAME),$(arg server)]</rosparam>
	</node>

	<node name="$(anon master_sync)" pkg="master_sync_fkie" type="master_sync">
<rosparam param="sync_topics">
- /heartbeat
- /measurements
- /map
- /tf
- $(env TURTLEBOT_NAME)/policy
</rosparam>
	</node>
-->
</launch>
